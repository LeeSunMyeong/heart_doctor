# Docker Compose for Heart Disease Check System Development Environment
version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: heart-disease-mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: heart_disease_db
      MYSQL_USER: heart_user
      MYSQL_PASSWORD: heart_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./sql:/docker-entrypoint-initdb.d
    networks:
      - heart-disease-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Redis for Session Management
  redis:
    image: redis:7.0-alpine
    container_name: heart-disease-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - heart-disease-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: heart-disease-app
    environment:
      SPRING_PROFILES_ACTIVE: development
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/heart_disease_db?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: heart_user
      SPRING_DATASOURCE_PASSWORD: heart_password
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
    ports:
      - "8080:8080"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - heart-disease-network
    volumes:
      - app_logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

volumes:
  mysql_data:
  redis_data:
  app_logs:

networks:
  heart-disease-network:
    driver: bridge