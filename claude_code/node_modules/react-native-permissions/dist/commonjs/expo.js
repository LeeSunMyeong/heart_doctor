"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _configPlugins = require("@expo/config-plugins");
var _generateCode = require("@expo/config-plugins/build/utils/generateCode");
var fs = _interopRequireWildcard(require("fs/promises"));
var path = _interopRequireWildcard(require("path"));
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) "default" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }
const withPermissions = (config, {
  iosPermissions = []
}) => (0, _configPlugins.withDangerousMod)(config, ['ios', async config => {
  const file = path.join(config.modRequest.platformProjectRoot, 'Podfile');
  const contents = await fs.readFile(file, 'utf8');
  if (iosPermissions.length === 0) {
    return config;
  }
  const withRequire = (0, _generateCode.mergeContents)({
    tag: 'require',
    src: contents,
    anchor: /^require File\.join\(File\.dirname\(`node --print "require\.resolve\('react-native\/package\.json'\)"`\), "scripts\/react_native_pods"\)$/m,
    newSrc: `require File.join(File.dirname(\`node --print "require.resolve('react-native-permissions/package.json')"\`), "scripts/setup")`,
    offset: 1,
    comment: '#'
  });
  const withSetup = (0, _generateCode.mergeContents)({
    tag: 'setup',
    src: withRequire.contents,
    anchor: /^prepare_react_native_project!$/m,
    newSrc: `setup_permissions([
${iosPermissions.map(permission => `  '${permission}',`).join('\n')}
])`,
    offset: 1,
    comment: '#'
  });
  await fs.writeFile(file, withSetup.contents, 'utf-8');
  return config;
}]);
var _default = exports.default = (0, _configPlugins.createRunOncePlugin)(withPermissions, 'react-native-permissions');
//# sourceMappingURL=expo.js.map